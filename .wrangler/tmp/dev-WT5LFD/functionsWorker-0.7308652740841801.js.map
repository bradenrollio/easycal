{
  "version": 3,
  "sources": ["../bundle-HWT8so/checked-fetch.js", "../bundle-PzE3H5/checked-fetch.js", "../../../functions/api/settings/defaults.js", "../../../functions/api/brand-config.js", "../../../functions/api/calendars.js", "../../../functions/api/debug-token.js", "../../../functions/api/detect-location.js", "../../../functions/api/import-calendars.js", "../../../functions/api/location-timezone.js", "../../../functions/api/locations.js", "../../../functions/api/test-auth.js", "../../../functions/auth/callback.js", "../../../functions/auth/callback-old.js", "../../../functions/auth/install.js", "../pages-WpINI4/functionsRoutes-0.747382803375639.mjs", "../../../../../../../../../opt/homebrew/lib/node_modules/wrangler/node_modules/path-to-regexp/src/index.ts", "../../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/pages-template-worker.ts", "../../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-PzE3H5/middleware-insertion-facade.js", "../../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-PzE3H5/middleware-loader.entry.ts", "../../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-HWT8so/middleware-insertion-facade.js", "../../../../../../../../../opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-HWT8so/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/dev-WT5LFD",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// Calendar Defaults API - GET and POST\nexport async function onRequest(context) {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  try {\n    if (request.method === 'GET') {\n      return handleGetDefaults(url, env, corsHeaders);\n    } else if (request.method === 'POST') {\n      return handlePostDefaults(request, env, corsHeaders);\n    } else {\n      return new Response('Method not allowed', { \n        status: 405, \n        headers: corsHeaders \n      });\n    }\n  } catch (error) {\n    console.error('Defaults API error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\nasync function handleGetDefaults(url, env, corsHeaders) {\n  const locationId = url.searchParams.get('locationId');\n  \n  if (!locationId) {\n    return new Response(JSON.stringify({ \n      error: 'locationId parameter is required' \n    }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n  \n  // Get defaults from KV\n  const kvKey = `location:${locationId}:defaults`;\n  const defaultsStr = await env.EASYCAL_SESSIONS.get(kvKey);\n  \n  if (!defaultsStr) {\n    // Return default calendar defaults\n    const defaultDefaults = {\n      locationId,\n      defaultSlotDurationMinutes: 30,\n      minSchedulingNoticeDays: 1,\n      bookingWindowDays: 30,\n      spotsPerBooking: 1,\n      updatedAt: new Date().toISOString()\n    };\n    \n    return new Response(JSON.stringify(defaultDefaults), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n  \n  const defaults = JSON.parse(defaultsStr);\n  return new Response(JSON.stringify(defaults), {\n    status: 200,\n    headers: { 'Content-Type': 'application/json', ...corsHeaders }\n  });\n}\n\nasync function handlePostDefaults(request, env, corsHeaders) {\n  const defaults = await request.json();\n  \n  // Validate required fields\n  const errors = validateCalendarDefaults(defaults);\n  \n  if (errors.length > 0) {\n    return new Response(JSON.stringify({ \n      error: 'Validation failed',\n      errors \n    }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n  \n  // Add timestamp\n  defaults.updatedAt = new Date().toISOString();\n  \n  // Store in KV\n  const kvKey = `location:${defaults.locationId}:defaults`;\n  await env.EASYCAL_SESSIONS.put(kvKey, JSON.stringify(defaults));\n  \n  return new Response(JSON.stringify(defaults), {\n    status: 200,\n    headers: { 'Content-Type': 'application/json', ...corsHeaders }\n  });\n}\n\nfunction validateCalendarDefaults(defaults) {\n  const errors = [];\n  \n  if (!defaults.locationId) {\n    errors.push('Location ID is required');\n  }\n  \n  if (!defaults.defaultSlotDurationMinutes || defaults.defaultSlotDurationMinutes < 1) {\n    errors.push('Default slot duration must be a positive number');\n  }\n  \n  if (!defaults.minSchedulingNoticeDays || defaults.minSchedulingNoticeDays < 0) {\n    errors.push('Minimum scheduling notice must be 0 or greater');\n  }\n  \n  if (!defaults.bookingWindowDays || defaults.bookingWindowDays < 1) {\n    errors.push('Booking window must be at least 1 day');\n  }\n  \n  if (!defaults.spotsPerBooking || defaults.spotsPerBooking < 1) {\n    errors.push('Spots per booking must be at least 1');\n  }\n  \n  if (defaults.defaultTimezone) {\n    try {\n      Intl.DateTimeFormat(undefined, { timeZone: defaults.defaultTimezone });\n    } catch {\n      errors.push('Invalid timezone format');\n    }\n  }\n  \n  return errors;\n}\n", "// Brand Config API - GET and POST\nexport async function onRequest(context) {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  try {\n    if (request.method === 'GET') {\n      return handleGetBrandConfig(url, env, corsHeaders);\n    } else if (request.method === 'POST') {\n      return handlePostBrandConfig(request, env, corsHeaders);\n    } else {\n      return new Response('Method not allowed', { \n        status: 405, \n        headers: corsHeaders \n      });\n    }\n  } catch (error) {\n    console.error('Brand Config API error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\nasync function handleGetBrandConfig(url, env, corsHeaders) {\n  const locationId = url.searchParams.get('locationId');\n  \n  if (!locationId) {\n    return new Response(JSON.stringify({ \n      error: 'locationId parameter is required' \n    }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n  \n  // Get brand config from KV\n  const kvKey = `location:${locationId}:brand`;\n  const configStr = await env.EASYCAL_SESSIONS.get(kvKey);\n  \n  if (!configStr) {\n    // Return default brand config\n    const defaultConfig = {\n      locationId,\n      primaryColorHex: '#FFC300',\n      backgroundColorHex: '#FFFFFF',\n      defaultButtonText: 'Book Now',\n      timezone: 'America/New_York',\n      updatedAt: new Date().toISOString()\n    };\n    \n    return new Response(JSON.stringify(defaultConfig), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n  \n  const config = JSON.parse(configStr);\n  return new Response(JSON.stringify(config), {\n    status: 200,\n    headers: { 'Content-Type': 'application/json', ...corsHeaders }\n  });\n}\n\nasync function handlePostBrandConfig(request, env, corsHeaders) {\n  const config = await request.json();\n  \n  // Validate required fields\n  const errors = validateBrandConfig(config);\n  \n  if (errors.length > 0) {\n    return new Response(JSON.stringify({ \n      error: 'Validation failed',\n      errors \n    }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n  \n  // Add timestamp\n  config.updatedAt = new Date().toISOString();\n  \n  // Store in KV\n  const kvKey = `location:${config.locationId}:brand`;\n  await env.EASYCAL_SESSIONS.put(kvKey, JSON.stringify(config));\n  \n  return new Response(JSON.stringify(config), {\n    status: 200,\n    headers: { 'Content-Type': 'application/json', ...corsHeaders }\n  });\n}\n\nfunction validateBrandConfig(config) {\n  const errors = [];\n  \n  if (!config.locationId) {\n    errors.push('Location ID is required');\n  }\n  \n  if (!config.primaryColorHex || !/^#[0-9a-fA-F]{6}$/.test(config.primaryColorHex)) {\n    errors.push('Primary color must be a valid hex color (#RRGGBB)');\n  }\n  \n  if (!config.backgroundColorHex || !/^#[0-9a-fA-F]{6}$/.test(config.backgroundColorHex)) {\n    errors.push('Background color must be a valid hex color (#RRGGBB)');\n  }\n  \n  if (!config.defaultButtonText || config.defaultButtonText.length < 3 || config.defaultButtonText.length > 30) {\n    errors.push('Default button text must be 3-30 characters');\n  }\n  \n  if (config.timezone) {\n    try {\n      Intl.DateTimeFormat(undefined, { timeZone: config.timezone });\n    } catch {\n      errors.push('Invalid timezone format');\n    }\n  }\n  \n  return errors;\n}\n", "// Calendar API - Create, list, and manage calendars\nexport async function onRequest(context) {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  try {\n    const locationId = url.searchParams.get('locationId');\n    \n    if (!locationId) {\n      return new Response(JSON.stringify({ \n        error: 'locationId parameter is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n\n    // Get access token for this location\n    const tokenData = await getLocationToken(locationId, env);\n    \n    if (!tokenData) {\n      return new Response(JSON.stringify({ \n        error: 'No access token found for location' \n      }), {\n        status: 404,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n\n    if (request.method === 'GET') {\n      return handleListCalendars(tokenData.accessToken, locationId, corsHeaders);\n    } else if (request.method === 'POST') {\n      return handleCreateCalendar(request, tokenData.accessToken, locationId, corsHeaders);\n    } else if (request.method === 'DELETE') {\n      return handleDeleteCalendars(request, tokenData.accessToken, locationId, corsHeaders);\n    } else {\n      return new Response('Method not allowed', { \n        status: 405, \n        headers: corsHeaders \n      });\n    }\n  } catch (error) {\n    console.error('Calendar API error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\n// Get access token for a location\nasync function getLocationToken(locationId, env) {\n  try {\n    console.log('Looking for token for location:', locationId);\n    \n    // First, try to get a direct location token\n    let result = await env.DB.prepare(`\n      SELECT access_token, refresh_token, expires_at, user_type, company_id\n      FROM tokens \n      WHERE location_id = ? \n      ORDER BY expires_at DESC \n      LIMIT 1\n    `).bind(locationId).first();\n    \n    // If no direct location token found, check for agency token\n    if (!result && (locationId === 'temp_location' || locationId?.startsWith('temp_') || locationId?.startsWith('agency_'))) {\n      console.log('No direct location token found, checking for agency token...');\n      console.log('Looking for agency token with user_type = Company and location_id IS NULL');\n      \n      result = await env.DB.prepare(`\n        SELECT access_token, refresh_token, expires_at, user_type, company_id\n        FROM tokens \n        WHERE user_type = 'Company' AND location_id IS NULL\n        ORDER BY expires_at DESC \n        LIMIT 1\n      `).first();\n      \n      console.log('Agency token query result:', result ? 'found' : 'not found');\n      \n      if (result) {\n        console.log('Found agency token, will use it to get location-specific access');\n      }\n    }\n    \n    console.log('Token query result:', result ? 'found' : 'not found');\n    \n    if (!result) {\n      console.log('No token found for location:', locationId);\n      return null;\n    }\n    \n    // Check if token is expired\n    const now = Math.floor(Date.now() / 1000);\n    console.log('Token expires at:', result.expires_at, 'Current time:', now);\n    \n    if (result.expires_at <= now) {\n      console.warn('Token expired for location:', locationId);\n      return null;\n    }\n    \n    // Decrypt token\n    console.log('Attempting to decrypt token...');\n    const accessToken = await decryptToken(result.access_token, env.ENCRYPTION_KEY);\n    console.log('Token decrypted successfully');\n    \n    // If this is an agency token, we need to get a location-specific token\n    if (result.user_type === 'Company' && result.company_id) {\n      console.log('Agency token detected, getting location-specific token...');\n      try {\n        // Use the known location ID directly\n        const knownLocationId = 'HgTZdA5INm0uiGh9KvHC';\n        return await getLocationTokenDirect(accessToken, result.company_id, knownLocationId);\n      } catch (error) {\n        console.error('Error getting location token:', error);\n        return null;\n      }\n    }\n    \n    return {\n      accessToken,\n      refreshToken: result.refresh_token,\n      expiresAt: result.expires_at\n    };\n  } catch (error) {\n    console.error('Error getting location token:', error);\n    return null;\n  }\n}\n\n// This function is no longer needed - we use getLocationTokenDirect directly\n\n// Direct function to get location token from agency token\nasync function getLocationTokenDirect(agencyToken, companyId, locationId) {\n  try {\n    console.log('Getting location token directly for:', { companyId, locationId });\n    \n    // Use the exact API format from GHL documentation\n    const tokenResponse = await fetch('https://services.leadconnectorhq.com/oauth/locationToken', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${agencyToken}`,\n        'Version': '2021-07-28',\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Accept': 'application/json'\n      },\n      body: new URLSearchParams({\n        companyId: companyId,\n        locationId: locationId\n      }).toString()\n    });\n    \n    console.log('Location token API response status:', tokenResponse.status);\n    \n    if (!tokenResponse.ok) {\n      const errorText = await tokenResponse.text();\n      console.error('Failed to get location token:', tokenResponse.status, errorText);\n      return null;\n    }\n    \n    const tokenData = await tokenResponse.json();\n    console.log('Successfully obtained location token for location:', locationId);\n    \n    return {\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token,\n      expiresAt: Math.floor(Date.now() / 1000) + (tokenData.expires_in || 86400)\n    };\n  } catch (error) {\n    console.error('Error getting location token directly:', error);\n    return null;\n  }\n}\n\n// Decrypt token using Web Crypto API\nasync function decryptToken(encryptedToken, encryptionKey) {\n  try {\n    const [encryptedData, ivData] = encryptedToken.split(':');\n    \n    // Import the encryption key\n    const key = await crypto.subtle.importKey(\n      'raw',\n      new TextEncoder().encode(encryptionKey.substring(0, 32)),\n      { name: 'AES-GCM' },\n      false,\n      ['decrypt']\n    );\n    \n    // Convert from base64\n    const encrypted = new Uint8Array(atob(encryptedData).split('').map(char => char.charCodeAt(0)));\n    const iv = new Uint8Array(atob(ivData).split('').map(char => char.charCodeAt(0)));\n    \n    // Decrypt\n    const decrypted = await crypto.subtle.decrypt(\n      { name: 'AES-GCM', iv: iv },\n      key,\n      encrypted\n    );\n    \n    return new TextDecoder().decode(decrypted);\n  } catch (error) {\n    console.error('Decryption error:', error);\n    throw new Error('Failed to decrypt token');\n  }\n}\n\n// Handle listing calendars\nasync function handleListCalendars(accessToken, locationId, corsHeaders) {\n  try {\n    // For agency installations, we need to use the actual location ID, not the agency prefix\n    const actualLocationId = locationId.startsWith('agency_') ? 'HgTZdA5INm0uiGh9KvHC' : locationId;\n    \n    console.log('Making GHL API call to list calendars for location:', actualLocationId);\n    console.log('Original locationId:', locationId, 'Actual locationId:', actualLocationId);\n    console.log('Using access token (first 10 chars):', accessToken.substring(0, 10));\n    \n    // Use the correct GHL API endpoint format from SDK documentation\n    // Include showDrafted=true to get all calendars (active + inactive)\n    const endpoint = `https://services.leadconnectorhq.com/calendars/?locationId=${actualLocationId}&showDrafted=true`;\n    console.log('Using GHL API endpoint:', endpoint);\n    \n    const response = await fetch(endpoint, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Version': '2021-07-28',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    console.log('GHL API response status:', response.status);\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GHL API error details:', {\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries(response.headers.entries()),\n        body: errorText\n      });\n      \n      return new Response(JSON.stringify({ \n        error: 'Failed to fetch calendars from GHL API',\n        status: response.status,\n        details: errorText,\n        endpoint: endpoint\n      }), {\n        status: 502,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    const data = await response.json();\n    console.log('GHL API success! Calendars found:', data.calendars?.length || 0);\n    \n    return new Response(JSON.stringify(data), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n    \n  } catch (error) {\n    console.error('Error listing calendars:', error);\n    return new Response(JSON.stringify({ \n      error: 'Failed to list calendars',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\n// Handle creating calendar\nasync function handleCreateCalendar(request, accessToken, locationId, corsHeaders) {\n  try {\n    const calendarData = await request.json();\n    \n    // Validate required fields\n    if (!calendarData.name || !calendarData.slug) {\n      return new Response(JSON.stringify({ \n        error: 'Calendar name and slug are required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // Add locationId to the data\n    const createData = {\n      ...calendarData,\n      locationId: locationId\n    };\n    \n    const response = await fetch('https://services.leadconnectorhq.com/calendars', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Version': '2021-07-28',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(createData)\n    });\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('GHL API error:', response.status, errorText);\n      return new Response(JSON.stringify({ \n        error: 'Failed to create calendar in GHL API',\n        details: errorText\n      }), {\n        status: 502,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    const data = await response.json();\n    \n    return new Response(JSON.stringify(data), {\n      status: 201,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  } catch (error) {\n    console.error('Error creating calendar:', error);\n    return new Response(JSON.stringify({ \n      error: 'Failed to create calendar',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\n// Handle deleting calendars\nasync function handleDeleteCalendars(request, accessToken, locationId, corsHeaders) {\n  try {\n    const { calendarIds } = await request.json();\n    \n    if (!calendarIds || !Array.isArray(calendarIds)) {\n      return new Response(JSON.stringify({ \n        error: 'calendarIds array is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    const results = { success: [], failed: [] };\n    \n    // Delete each calendar\n    for (const calendarId of calendarIds) {\n      try {\n        const response = await fetch(`https://services.leadconnectorhq.com/calendars/${calendarId}?locationId=${locationId}`, {\n          method: 'DELETE',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n            'Version': '2021-07-28',\n            'Content-Type': 'application/json'\n          }\n        });\n        \n        if (response.ok) {\n          results.success.push(calendarId);\n        } else {\n          const errorText = await response.text();\n          results.failed.push({\n            id: calendarId,\n            error: `HTTP ${response.status}: ${errorText}`\n          });\n        }\n      } catch (error) {\n        results.failed.push({\n          id: calendarId,\n          error: error.message\n        });\n      }\n    }\n    \n    return new Response(JSON.stringify(results), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  } catch (error) {\n    console.error('Error deleting calendars:', error);\n    return new Response(JSON.stringify({ \n      error: 'Failed to delete calendars',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}", "// Debug Token API - Test token decryption and GHL API call\nexport async function onRequest(context) {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  try {\n    const locationId = url.searchParams.get('locationId') || 'EnUqtThIwW8pdTLOvuO7';\n    \n    console.log('DEBUG: Testing token for location:', locationId);\n    \n    // Get token from database\n    const result = await env.DB.prepare(`\n      SELECT access_token, refresh_token, expires_at, scope\n      FROM tokens \n      WHERE location_id = ? \n      ORDER BY expires_at DESC \n      LIMIT 1\n    `).bind(locationId).first();\n    \n    if (!result) {\n      return new Response(JSON.stringify({\n        error: 'No token found',\n        locationId: locationId,\n        debug: 'Token not found in database'\n      }), {\n        status: 404,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // Check expiration\n    const now = Math.floor(Date.now() / 1000);\n    const isExpired = result.expires_at <= now;\n    \n    console.log('DEBUG: Token found, expires:', result.expires_at, 'now:', now, 'expired:', isExpired);\n    \n    if (isExpired) {\n      return new Response(JSON.stringify({\n        error: 'Token expired',\n        locationId: locationId,\n        expiresAt: result.expires_at,\n        currentTime: now,\n        debug: 'Token is expired'\n      }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // Try to decrypt token\n    let accessToken;\n    try {\n      accessToken = await decryptToken(result.access_token, env.ENCRYPTION_KEY);\n      console.log('DEBUG: Token decrypted successfully, length:', accessToken.length);\n    } catch (decryptError) {\n      console.error('DEBUG: Token decryption failed:', decryptError);\n      return new Response(JSON.stringify({\n        error: 'Token decryption failed',\n        locationId: locationId,\n        debug: decryptError.message\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // Test GHL API call\n    try {\n      const ghlResponse = await fetch(`https://services.leadconnectorhq.com/calendars?locationId=${locationId}`, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`,\n          'Version': '2021-07-28',\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('DEBUG: GHL API response status:', ghlResponse.status);\n      \n      if (!ghlResponse.ok) {\n        const errorText = await ghlResponse.text();\n        console.error('DEBUG: GHL API error:', errorText);\n        return new Response(JSON.stringify({\n          error: 'GHL API call failed',\n          locationId: locationId,\n          status: ghlResponse.status,\n          debug: errorText\n        }), {\n          status: 502,\n          headers: { 'Content-Type': 'application/json', ...corsHeaders }\n        });\n      }\n      \n      const ghlData = await ghlResponse.json();\n      console.log('DEBUG: GHL API success, calendars count:', ghlData.calendars?.length || 0);\n      \n      return new Response(JSON.stringify({\n        success: true,\n        locationId: locationId,\n        calendarsCount: ghlData.calendars?.length || 0,\n        calendars: ghlData.calendars?.slice(0, 3) || [], // First 3 for debugging\n        debug: 'All checks passed'\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n      \n    } catch (apiError) {\n      console.error('DEBUG: API call error:', apiError);\n      return new Response(JSON.stringify({\n        error: 'API call failed',\n        locationId: locationId,\n        debug: apiError.message\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n  } catch (error) {\n    console.error('DEBUG: General error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      debug: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\n// Decrypt token using Web Crypto API\nasync function decryptToken(encryptedToken, encryptionKey) {\n  try {\n    const [encryptedData, ivData] = encryptedToken.split(':');\n    \n    if (!encryptedData || !ivData) {\n      throw new Error('Invalid encrypted token format');\n    }\n    \n    // Import the encryption key\n    const key = await crypto.subtle.importKey(\n      'raw',\n      new TextEncoder().encode(encryptionKey.substring(0, 32)),\n      { name: 'AES-GCM' },\n      false,\n      ['decrypt']\n    );\n    \n    // Convert from base64\n    const encrypted = new Uint8Array(atob(encryptedData).split('').map(char => char.charCodeAt(0)));\n    const iv = new Uint8Array(atob(ivData).split('').map(char => char.charCodeAt(0)));\n    \n    // Decrypt\n    const decrypted = await crypto.subtle.decrypt(\n      { name: 'AES-GCM', iv: iv },\n      key,\n      encrypted\n    );\n    \n    return new TextDecoder().decode(decrypted);\n  } catch (error) {\n    console.error('Decryption error:', error);\n    throw new Error(`Failed to decrypt token: ${error.message}`);\n  }\n}\n", "// Detect Location API - Find the correct location ID for the current user\nexport async function onRequest(context) {\n  const { request, env } = context;\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  try {\n    // First, try to get the most recent valid token (including agency tokens)\n    const tokenResult = await env.DB.prepare(`\n      SELECT t.location_id, t.user_type, t.company_id, t.expires_at,\n             l.name as location_name, l.time_zone\n      FROM tokens t\n      LEFT JOIN locations l ON l.id = t.location_id\n      WHERE t.expires_at > ?\n      ORDER BY \n        CASE WHEN t.user_type = 'Location' THEN 0 ELSE 1 END,\n        CASE WHEN t.location_id NOT LIKE 'temp_%' AND t.location_id NOT LIKE 'agency_%' THEN 0 ELSE 1 END,\n        t.expires_at DESC\n      LIMIT 1\n    `).bind(Math.floor(Date.now() / 1000)).first();\n    \n    if (!tokenResult) {\n      return new Response(JSON.stringify({\n        error: 'No valid tokens found'\n      }), {\n        status: 404,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // Handle agency-level installations\n    if (tokenResult.user_type === 'Company') {\n      return new Response(JSON.stringify({\n        locationId: tokenResult.location_id,\n        companyId: tokenResult.company_id,\n        userType: 'Company',\n        isAgencyInstall: true,\n        locationName: 'Agency Installation',\n        timeZone: 'America/New_York'\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // Handle location-level installations\n    return new Response(JSON.stringify({\n      locationId: tokenResult.location_id,\n      companyId: tokenResult.company_id,\n      userType: 'Location',\n      isAgencyInstall: false,\n      locationName: tokenResult.location_name || 'Location Installation',\n      timeZone: tokenResult.time_zone || 'America/New_York'\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n    \n  } catch (error) {\n    console.error('Detect location error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n", "// Import Calendars API - Process CSV and create GHL calendars\nexport async function onRequest(context) {\n  const { request, env } = context;\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'POST, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  if (request.method !== 'POST') {\n    return new Response('Method not allowed', { \n      status: 405, \n      headers: corsHeaders \n    });\n  }\n  \n  try {\n    const { locationId, csvRows, brandConfig, defaults } = await request.json();\n    \n    if (!locationId || !csvRows || !Array.isArray(csvRows)) {\n      return new Response(JSON.stringify({\n        error: 'locationId and csvRows are required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n\n    // Get access token for this location\n    const tokenData = await getLocationToken(locationId, env);\n    \n    if (!tokenData) {\n      return new Response(JSON.stringify({ \n        error: 'No access token found for location' \n      }), {\n        status: 404,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n\n    // Create job record\n    const jobId = generateId();\n    await env.DB.prepare(`\n      INSERT INTO jobs (id, tenant_id, location_id, type, status, total, success_count, error_count, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      jobId,\n      'temp', // We'll update this when we have proper tenant lookup\n      locationId,\n      'create_calendars',\n      'running',\n      csvRows.length,\n      0,\n      0,\n      Math.floor(Date.now() / 1000),\n      Math.floor(Date.now() / 1000)\n    ).run();\n\n    // Process calendars (we'll do this synchronously for now, but could use queues for large batches)\n    const results = [];\n    let successCount = 0;\n    let errorCount = 0;\n    const groupCache = new Map(); // Cache created groups\n\n    for (let i = 0; i < csvRows.length; i++) {\n      const row = csvRows[i];\n      \n      try {\n        // Validate row\n        const validationErrors = validateCSVRow(row, i);\n        if (validationErrors.some(e => e.severity === 'error')) {\n          const errorResult = {\n            success: false,\n            slug: row.custom_url || slugify(row.calendar_name),\n            name: row.calendar_name,\n            error: validationErrors.filter(e => e.severity === 'error').map(e => e.message).join('; '),\n            warnings: validationErrors.filter(e => e.severity === 'warning').map(e => e.message)\n          };\n          results.push(errorResult);\n          errorCount++;\n          continue;\n        }\n        \n        // Ensure calendar group exists\n        let groupId;\n        if (row.calendar_group) {\n          if (groupCache.has(row.calendar_group)) {\n            groupId = groupCache.get(row.calendar_group);\n          } else {\n            groupId = await ensureGroup(row.calendar_group, locationId, tokenData.accessToken);\n            groupCache.set(row.calendar_group, groupId);\n          }\n        }\n        \n        // Build calendar payload\n        const payload = buildCalendarPayload(row, brandConfig, defaults, locationId, groupId);\n        \n        // Create or update calendar\n        const result = await createOrUpdateCalendar(payload, tokenData.accessToken);\n        \n        const successResult = {\n          success: true,\n          calendarId: result.id,\n          slug: payload.slug,\n          name: payload.name,\n          isUpdate: result.isUpdate,\n          warnings: validationErrors.filter(e => e.severity === 'warning').map(e => e.message)\n        };\n        results.push(successResult);\n        successCount++;\n        \n        // Store job item result\n        await env.DB.prepare(`\n          INSERT INTO job_items (id, job_id, input, result, status, error_message)\n          VALUES (?, ?, ?, ?, ?, ?)\n        `).bind(\n          generateId(),\n          jobId,\n          JSON.stringify(row),\n          JSON.stringify(successResult),\n          'success',\n          null\n        ).run();\n        \n      } catch (error) {\n        console.error(`Error processing row ${i}:`, error);\n        const errorResult = {\n          success: false,\n          slug: row.custom_url || slugify(row.calendar_name),\n          name: row.calendar_name,\n          error: error.message\n        };\n        results.push(errorResult);\n        errorCount++;\n        \n        // Store job item error\n        await env.DB.prepare(`\n          INSERT INTO job_items (id, job_id, input, result, status, error_message)\n          VALUES (?, ?, ?, ?, ?, ?)\n        `).bind(\n          generateId(),\n          jobId,\n          JSON.stringify(row),\n          JSON.stringify(errorResult),\n          'error',\n          error.message\n        ).run();\n      }\n    }\n\n    // Update job status\n    const finalStatus = errorCount === 0 ? 'success' : (successCount === 0 ? 'error' : 'partial');\n    await env.DB.prepare(`\n      UPDATE jobs \n      SET status = ?, success_count = ?, error_count = ?, updated_at = ?\n      WHERE id = ?\n    `).bind(\n      finalStatus,\n      successCount,\n      errorCount,\n      Math.floor(Date.now() / 1000),\n      jobId\n    ).run();\n\n    return new Response(JSON.stringify({\n      success: true,\n      jobId: jobId,\n      results,\n      summary: {\n        total: results.length,\n        successful: results.filter(r => r.success).length,\n        failed: results.filter(r => !r.success).length,\n        updated: results.filter(r => r.success && r.isUpdate).length,\n        created: results.filter(r => r.success && !r.isUpdate).length\n      }\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n    \n  } catch (error) {\n    console.error('Import calendars error:', error);\n    return new Response(JSON.stringify({\n      error: 'Import failed',\n      message: error.message\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\n// Helper functions\nfunction validateCSVRow(row, rowIndex) {\n  const errors = [];\n  \n  if (!row.calendar_type || row.calendar_type.toLowerCase() !== 'event') {\n    errors.push({ row: rowIndex, field: 'calendar_type', message: 'Calendar type must be \"event\"', severity: 'error' });\n  }\n  \n  if (!row.calendar_name?.trim()) {\n    errors.push({ row: rowIndex, field: 'calendar_name', message: 'Calendar name is required', severity: 'error' });\n  }\n  \n  if (!row.schedule_blocks?.trim()) {\n    errors.push({ row: rowIndex, field: 'schedule_blocks', message: 'Schedule blocks are required', severity: 'error' });\n  }\n  \n  const slotInterval = parseInt(row.slot_interval_minutes);\n  const classDuration = parseInt(row.class_duration_minutes);\n  \n  if (isNaN(slotInterval) || slotInterval <= 0) {\n    errors.push({ row: rowIndex, field: 'slot_interval_minutes', message: 'Slot interval must be a positive number', severity: 'error' });\n  }\n  \n  if (isNaN(classDuration) || classDuration <= 0) {\n    errors.push({ row: rowIndex, field: 'class_duration_minutes', message: 'Class duration must be a positive number', severity: 'error' });\n  }\n  \n  return errors;\n}\n\nfunction slugify(name) {\n  return name\n    .toLowerCase()\n    .trim()\n    .replace(/[^\\w\\s-]/g, '')\n    .replace(/[\\s_-]+/g, '-')\n    .replace(/^-+|-+$/g, '');\n}\n\nfunction applyBranding(row, brandConfig) {\n  const primaryColor = row.primary_color_hex || brandConfig?.primaryColorHex || '#FFC300';\n  const backgroundColor = row.background_color_hex || brandConfig?.backgroundColorHex || '#FFFFFF';\n  \n  let buttonText = row.button_text;\n  if (!buttonText) {\n    if (row.calendar_purpose === 'makeup') {\n      buttonText = 'Schedule Make-Up';\n    } else {\n      buttonText = brandConfig?.defaultButtonText || 'Book Now';\n    }\n  }\n  \n  return { primaryColor, backgroundColor, buttonText };\n}\n\nfunction buildCalendarPayload(row, brandConfig, defaults, locationId, groupId) {\n  const branding = applyBranding(row, brandConfig);\n  const slug = row.custom_url || slugify(row.calendar_name);\n  \n  // Parse schedule blocks\n  const blocks = parseScheduleBlocks(row.schedule_blocks);\n  \n  return {\n    locationId: locationId,\n    name: row.calendar_name,\n    description: row.class_description || '',\n    slug: slug,\n    widgetType: 'default',\n    calendarType: 1, // Event calendar\n    eventType: 'RoundRobin_OptimizeForAvailability',\n    groupId: groupId,\n    isActive: true,\n    \n    customizations: {\n      primaryColor: branding.primaryColor,\n      backgroundColor: branding.backgroundColor,\n      buttonText: branding.buttonText\n    },\n    \n    availabilityTimezone: brandConfig?.defaultTimezone || defaults?.defaultTimezone || 'America/New_York',\n    slotDurationMinutes: parseInt(row.slot_interval_minutes) || defaults?.defaultSlotDurationMinutes || 30,\n    slotBufferMinutes: 0,\n    minSchedulingNoticeMinutes: (parseInt(row.min_scheduling_notice_days) || defaults?.minSchedulingNoticeDays || 1) * 24 * 60,\n    maxSchedulingNoticeDays: 365,\n    \n    maxBookingsPerSlot: 1,\n    maxBookingsPerDay: parseInt(row.max_bookings_per_day) || 10,\n    \n    availabilities: blocks.map(block => ({\n      day: getDayNumber(block.day),\n      hours: [{\n        openTime: block.start,\n        closeTime: block.end\n      }]\n    }))\n  };\n}\n\nfunction parseScheduleBlocks(scheduleStr) {\n  const blocks = [];\n  if (!scheduleStr?.trim()) return blocks;\n  \n  const segments = scheduleStr.split(';').map(s => s.trim());\n  \n  for (const segment of segments) {\n    if (!segment) continue;\n    \n    const match = segment.match(/^(\\w+)\\s+(.+)$/);\n    if (!match) continue;\n    \n    const [, dayStr, timeRange] = match;\n    const day = normalizeDay(dayStr);\n    \n    if (!day) continue;\n    \n    const timeMatch = timeRange.match(/^(.+?)-(.+?)$/);\n    if (!timeMatch) continue;\n    \n    const [, startTime, endTime] = timeMatch;\n    const start = to24h(startTime.trim());\n    const end = to24h(endTime.trim());\n    \n    if (!start || !end) continue;\n    \n    blocks.push({ day, start, end });\n  }\n  \n  return blocks;\n}\n\nfunction normalizeDay(token) {\n  const normalized = token.toLowerCase().trim();\n  \n  const dayMap = {\n    'mon': 'Mon', 'monday': 'Mon',\n    'tue': 'Tue', 'tuesday': 'Tue', 'tues': 'Tue',\n    'wed': 'Wed', 'wednesday': 'Wed',\n    'thu': 'Thu', 'thursday': 'Thu', 'thur': 'Thu', 'thurs': 'Thu',\n    'fri': 'Fri', 'friday': 'Fri',\n    'sat': 'Sat', 'saturday': 'Sat',\n    'sun': 'Sun', 'sunday': 'Sun'\n  };\n\n  return dayMap[normalized] || null;\n}\n\nfunction to24h(time) {\n  const trimmed = time.trim();\n  \n  // Check if it's already in 24-hour format\n  if (/^\\d{1,2}:\\d{2}$/.test(trimmed)) {\n    const [hours, minutes] = trimmed.split(':');\n    const h = parseInt(hours, 10);\n    const m = parseInt(minutes, 10);\n    \n    if (h >= 0 && h <= 23 && m >= 0 && m <= 59) {\n      return `${h.toString().padStart(2, '0')}:${m.toString().padStart(2, '0')}`;\n    }\n  }\n  \n  // Parse 12-hour format\n  const match12h = trimmed.match(/^(\\d{1,2})(?::(\\d{2}))?\\s*(AM|PM)$/i);\n  if (match12h) {\n    let hours = parseInt(match12h[1], 10);\n    const minutes = parseInt(match12h[2] || '0', 10);\n    const ampm = match12h[3].toUpperCase();\n    \n    if (hours < 1 || hours > 12 || minutes < 0 || minutes > 59) {\n      return null;\n    }\n    \n    if (ampm === 'AM' && hours === 12) {\n      hours = 0;\n    } else if (ampm === 'PM' && hours !== 12) {\n      hours += 12;\n    }\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  }\n  \n  return null;\n}\n\nfunction getDayNumber(dayName) {\n  const dayMap = {\n    'Sun': 0, 'Sunday': 0,\n    'Mon': 1, 'Monday': 1,\n    'Tue': 2, 'Tuesday': 2,\n    'Wed': 3, 'Wednesday': 3,\n    'Thu': 4, 'Thursday': 4,\n    'Fri': 5, 'Friday': 5,\n    'Sat': 6, 'Saturday': 6\n  };\n  \n  return dayMap[dayName] ?? 1;\n}\n\nfunction generateId() {\n  return Math.random().toString(36).substring(2) + Date.now().toString(36);\n}\n\n// GHL API functions\nasync function ensureGroup(groupName, locationId, accessToken) {\n  try {\n    // First, try to find existing group\n    const groupsResponse = await fetch(`https://services.leadconnectorhq.com/calendars/groups?locationId=${locationId}`, {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Version': '2021-07-28',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    if (groupsResponse.ok) {\n      const groupsData = await groupsResponse.json();\n      const existingGroup = groupsData.groups?.find(g => g.name.toLowerCase() === groupName.toLowerCase());\n      \n      if (existingGroup) {\n        return existingGroup.id;\n      }\n    }\n\n    // Create new group\n    const groupData = {\n      locationId: locationId,\n      name: groupName,\n      slug: slugify(groupName),\n      isActive: true\n    };\n\n    const createResponse = await fetch('https://services.leadconnectorhq.com/calendars/groups', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Version': '2021-07-28',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(groupData)\n    });\n\n    if (!createResponse.ok) {\n      throw new Error(`Failed to create group: ${createResponse.status}`);\n    }\n\n    const newGroup = await createResponse.json();\n    return newGroup.group.id;\n  } catch (error) {\n    console.error('Error ensuring group:', error);\n    throw error;\n  }\n}\n\nasync function createOrUpdateCalendar(payload, accessToken) {\n  try {\n    // Check if calendar already exists by slug\n    const existingCalendar = await findCalendarBySlug(payload.slug, payload.locationId, accessToken);\n    \n    if (existingCalendar) {\n      // Update existing calendar\n      const response = await fetch(`https://services.leadconnectorhq.com/calendars/${existingCalendar.id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`,\n          'Version': '2021-07-28',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`GHL API Error ${response.status}: ${errorText}`);\n      }\n\n      const data = await response.json();\n      return { id: data.calendar.id, isUpdate: true };\n    } else {\n      // Create new calendar\n      const response = await fetch('https://services.leadconnectorhq.com/calendars', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`,\n          'Version': '2021-07-28',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`GHL API Error ${response.status}: ${errorText}`);\n      }\n\n      const data = await response.json();\n      return { id: data.calendar.id, isUpdate: false };\n    }\n  } catch (error) {\n    console.error('Error creating/updating calendar:', error);\n    throw error;\n  }\n}\n\nasync function findCalendarBySlug(slug, locationId, accessToken) {\n  try {\n    const response = await fetch(`https://services.leadconnectorhq.com/calendars?locationId=${locationId}`, {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Version': '2021-07-28',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    if (!response.ok) {\n      return null;\n    }\n    \n    const data = await response.json();\n    return data.calendars?.find(cal => cal.slug === slug) || null;\n  } catch (error) {\n    console.error('Error finding calendar by slug:', error);\n    return null;\n  }\n}\n\n// Get access token for a location\nasync function getLocationToken(locationId, env) {\n  try {\n    const result = await env.DB.prepare(`\n      SELECT access_token, refresh_token, expires_at \n      FROM tokens \n      WHERE location_id = ? \n      ORDER BY expires_at DESC \n      LIMIT 1\n    `).bind(locationId).first();\n    \n    if (!result) {\n      return null;\n    }\n    \n    const now = Math.floor(Date.now() / 1000);\n    if (result.expires_at <= now) {\n      console.warn('Token expired for location:', locationId);\n      return null;\n    }\n    \n    const accessToken = await decryptToken(result.access_token, env.ENCRYPTION_KEY);\n    \n    return {\n      accessToken,\n      refreshToken: result.refresh_token,\n      expiresAt: result.expires_at\n    };\n  } catch (error) {\n    console.error('Error getting location token:', error);\n    return null;\n  }\n}\n\n// Decrypt token\nasync function decryptToken(encryptedToken, encryptionKey) {\n  try {\n    const [encryptedData, ivData] = encryptedToken.split(':');\n    \n    const key = await crypto.subtle.importKey(\n      'raw',\n      new TextEncoder().encode(encryptionKey.substring(0, 32)),\n      { name: 'AES-GCM' },\n      false,\n      ['decrypt']\n    );\n    \n    const encrypted = new Uint8Array(atob(encryptedData).split('').map(char => char.charCodeAt(0)));\n    const iv = new Uint8Array(atob(ivData).split('').map(char => char.charCodeAt(0)));\n    \n    const decrypted = await crypto.subtle.decrypt(\n      { name: 'AES-GCM', iv: iv },\n      key,\n      encrypted\n    );\n    \n    return new TextDecoder().decode(decrypted);\n  } catch (error) {\n    console.error('Decryption error:', error);\n    throw new Error('Failed to decrypt token');\n  }\n}", "// Location Timezone API - GET location timezone from GHL\nexport async function onRequest(context) {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  if (request.method !== 'GET') {\n    return new Response('Method not allowed', { \n      status: 405, \n      headers: corsHeaders \n    });\n  }\n  \n  try {\n    const locationId = url.searchParams.get('locationId');\n    \n    if (!locationId) {\n      return new Response(JSON.stringify({ \n        error: 'locationId parameter is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // First try to get timezone from our database\n    const locationResult = await env.DB.prepare(`\n      SELECT time_zone FROM locations WHERE id = ?\n    `).bind(locationId).first();\n    \n    if (locationResult) {\n      return new Response(JSON.stringify({ \n        timeZone: locationResult.time_zone \n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // If not in database, try to get from GHL API\n    const tokenData = await getLocationToken(locationId, env);\n    \n    if (!tokenData) {\n      // Return default timezone if no token available\n      return new Response(JSON.stringify({ \n        timeZone: 'America/New_York'\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    // Fetch location details from GHL API\n    const ghlResponse = await fetch(`https://services.leadconnectorhq.com/locations/${locationId}`, {\n      headers: {\n        'Authorization': `Bearer ${tokenData.accessToken}`,\n        'Version': '2021-07-28',\n        'Content-Type': 'application/json'\n      }\n    });\n    \n    if (!ghlResponse.ok) {\n      console.error('GHL API error:', await ghlResponse.text());\n      return new Response(JSON.stringify({ \n        timeZone: 'America/New_York' // Fallback\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n    \n    const locationData = await ghlResponse.json();\n    const timeZone = locationData.location?.timezone || 'America/New_York';\n    \n    // Update our database with the timezone\n    try {\n      await env.DB.prepare(`\n        UPDATE locations SET time_zone = ? WHERE id = ?\n      `).bind(timeZone, locationId).run();\n    } catch (error) {\n      console.warn('Failed to update location timezone in database:', error);\n    }\n    \n    return new Response(JSON.stringify({ \n      timeZone: timeZone\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n    \n  } catch (error) {\n    console.error('Location timezone API error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\nasync function getLocationToken(locationId, env) {\n  try {\n    // Get token from database\n    const result = await env.DB.prepare(`\n      SELECT access_token, refresh_token, expires_at \n      FROM tokens \n      WHERE location_id = ? \n      ORDER BY expires_at DESC \n      LIMIT 1\n    `).bind(locationId).first();\n    \n    if (!result) {\n      return null;\n    }\n    \n    // Check if token is expired\n    const now = Math.floor(Date.now() / 1000);\n    if (result.expires_at <= now) {\n      // TODO: Implement token refresh\n      console.warn('Token expired for location:', locationId);\n      return null;\n    }\n    \n    // Decrypt token\n    const accessToken = await decryptToken(result.access_token, env.ENCRYPTION_KEY);\n    \n    return {\n      accessToken,\n      refreshToken: result.refresh_token,\n      expiresAt: result.expires_at\n    };\n  } catch (error) {\n    console.error('Error getting location token:', error);\n    return null;\n  }\n}\n\n// Decrypt token using Web Crypto API\nasync function decryptToken(encryptedToken, encryptionKey) {\n  try {\n    const [encryptedData, ivData] = encryptedToken.split(':');\n    \n    // Import the encryption key\n    const key = await crypto.subtle.importKey(\n      'raw',\n      new TextEncoder().encode(encryptionKey.substring(0, 32)),\n      { name: 'AES-GCM' },\n      false,\n      ['decrypt']\n    );\n    \n    // Convert from base64\n    const encrypted = new Uint8Array(atob(encryptedData).split('').map(char => char.charCodeAt(0)));\n    const iv = new Uint8Array(atob(ivData).split('').map(char => char.charCodeAt(0)));\n    \n    // Decrypt\n    const decrypted = await crypto.subtle.decrypt(\n      { name: 'AES-GCM', iv: iv },\n      key,\n      encrypted\n    );\n    \n    return new TextDecoder().decode(decrypted);\n  } catch (error) {\n    console.error('Decryption error:', error);\n    throw new Error('Failed to decrypt token');\n  }\n}\n", "// Locations API - List stored locations\nexport async function onRequest(context) {\n  const { request, env } = context;\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  if (request.method !== 'GET') {\n    return new Response('Method not allowed', { \n      status: 405, \n      headers: corsHeaders \n    });\n  }\n  \n  try {\n    // Get all locations from the database\n    const result = await env.DB.prepare(`\n      SELECT id, name, time_zone, is_enabled \n      FROM locations \n      WHERE is_enabled = 1\n      ORDER BY name\n    `).all();\n    \n    const locations = result.results || [];\n    \n    return new Response(JSON.stringify({\n      success: true,\n      locations: locations\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n    \n  } catch (error) {\n    console.error('Locations API error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n", "// Test Auth API - Simple test to verify token works\nexport async function onRequest(context) {\n  const { request, env } = context;\n  const url = new URL(request.url);\n  \n  // CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  };\n  \n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders });\n  }\n  \n  try {\n    const locationId = url.searchParams.get('locationId') || 'EnUqtThIwW8pdTLOvuO7';\n    \n    // Get token\n    const tokenData = await getLocationToken(locationId, env);\n    \n    if (!tokenData) {\n      return new Response(JSON.stringify({\n        error: 'No token found',\n        locationId: locationId\n      }), {\n        status: 404,\n        headers: { 'Content-Type': 'application/json', ...corsHeaders }\n      });\n    }\n\n    // Test with a simple GHL API endpoint that should work - try locations first\n    const testEndpoints = [\n      {\n        name: 'Get Location Info',\n        url: `https://services.leadconnectorhq.com/locations/${locationId}`,\n        method: 'GET'\n      },\n      {\n        name: 'List Calendars',\n        url: `https://services.leadconnectorhq.com/calendars/?locationId=${locationId}`,\n        method: 'GET'\n      },\n      {\n        name: 'List Calendars with showDrafted',\n        url: `https://services.leadconnectorhq.com/calendars/?locationId=${locationId}&showDrafted=true`,\n        method: 'GET'\n      }\n    ];\n\n    const results = [];\n\n    for (const endpoint of testEndpoints) {\n      try {\n        console.log(`Testing ${endpoint.name}: ${endpoint.url}`);\n        \n        const response = await fetch(endpoint.url, {\n          method: endpoint.method,\n          headers: {\n            'Authorization': `Bearer ${tokenData.accessToken}`,\n            'Version': '2021-07-28',\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const responseText = await response.text();\n        let responseData;\n        try {\n          responseData = JSON.parse(responseText);\n        } catch {\n          responseData = responseText;\n        }\n\n        results.push({\n          endpoint: endpoint.name,\n          url: endpoint.url,\n          status: response.status,\n          success: response.ok,\n          data: response.ok ? responseData : null,\n          error: !response.ok ? responseData : null\n        });\n\n        console.log(`${endpoint.name} result:`, response.status, response.ok ? 'SUCCESS' : 'FAILED');\n        \n      } catch (error) {\n        results.push({\n          endpoint: endpoint.name,\n          url: endpoint.url,\n          status: 'ERROR',\n          success: false,\n          error: error.message\n        });\n        console.error(`${endpoint.name} error:`, error);\n      }\n    }\n\n    return new Response(JSON.stringify({\n      locationId: locationId,\n      tokenFound: true,\n      tokenExpiry: tokenData.expiresAt,\n      currentTime: Math.floor(Date.now() / 1000),\n      results: results\n    }, null, 2), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n    \n  } catch (error) {\n    console.error('Test auth error:', error);\n    return new Response(JSON.stringify({ \n      error: 'Internal server error',\n      message: error.message \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json', ...corsHeaders }\n    });\n  }\n}\n\n// Get access token for a location (duplicate function for testing)\nasync function getLocationToken(locationId, env) {\n  try {\n    const result = await env.DB.prepare(`\n      SELECT access_token, refresh_token, expires_at \n      FROM tokens \n      WHERE location_id = ? \n      ORDER BY expires_at DESC \n      LIMIT 1\n    `).bind(locationId).first();\n    \n    if (!result) {\n      return null;\n    }\n    \n    const now = Math.floor(Date.now() / 1000);\n    if (result.expires_at <= now) {\n      console.warn('Token expired for location:', locationId);\n      return null;\n    }\n    \n    const accessToken = await decryptToken(result.access_token, env.ENCRYPTION_KEY);\n    \n    return {\n      accessToken,\n      refreshToken: result.refresh_token,\n      expiresAt: result.expires_at\n    };\n  } catch (error) {\n    console.error('Error getting location token:', error);\n    return null;\n  }\n}\n\n// Decrypt token\nasync function decryptToken(encryptedToken, encryptionKey) {\n  try {\n    const [encryptedData, ivData] = encryptedToken.split(':');\n    \n    const key = await crypto.subtle.importKey(\n      'raw',\n      new TextEncoder().encode(encryptionKey.substring(0, 32)),\n      { name: 'AES-GCM' },\n      false,\n      ['decrypt']\n    );\n    \n    const encrypted = new Uint8Array(atob(encryptedData).split('').map(char => char.charCodeAt(0)));\n    const iv = new Uint8Array(atob(ivData).split('').map(char => char.charCodeAt(0)));\n    \n    const decrypted = await crypto.subtle.decrypt(\n      { name: 'AES-GCM', iv: iv },\n      key,\n      encrypted\n    );\n    \n    return new TextDecoder().decode(decrypted);\n  } catch (error) {\n    console.error('Decryption error:', error);\n    throw new Error('Failed to decrypt token');\n  }\n}\n", "// Simplified OAuth Callback - Robust location ID handling\nexport async function onRequest(context) {\n  const { request, env } = context;\n  \n  try {\n    const url = new URL(request.url);\n    const code = url.searchParams.get('code');\n    \n    console.log('Simple OAuth callback - Code received:', code ? 'YES' : 'NO');\n    console.log('Full callback URL:', request.url);\n    \n    if (!code) {\n      return new Response(`\n        <!DOCTYPE html>\n        <html><body>\n          <h1>Authorization Error</h1>\n          <p>No authorization code received.</p>\n        </body></html>\n      `, { status: 400, headers: { 'Content-Type': 'text/html' } });\n    }\n    \n    // Exchange code for token\n    const tokenResponse = await fetch('https://services.leadconnectorhq.com/oauth/token', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: new URLSearchParams({\n        client_id: env.HL_CLIENT_ID,\n        client_secret: env.HL_CLIENT_SECRET,\n        grant_type: 'authorization_code',\n        code: code,\n        redirect_uri: env.OAUTH_REDIRECT_URL,\n        user_type: 'Location'\n      }).toString()\n    });\n\n    if (!tokenResponse.ok) {\n      const errorText = await tokenResponse.text();\n      console.error('Token exchange failed:', tokenResponse.status, errorText);\n      return new Response(`\n        <!DOCTYPE html>\n        <html><body>\n          <h1>Token Exchange Failed</h1>\n          <p>Error: ${tokenResponse.status}</p>\n        </body></html>\n      `, { status: 400, headers: { 'Content-Type': 'text/html' } });\n    }\n\n    const tokenData = await tokenResponse.json();\n    console.log('Token received - keys:', Object.keys(tokenData));\n    console.log('Full token data:', tokenData);\n    \n    // Extract location ID from token response\n    const locationId = tokenData.locationId;\n    const userType = tokenData.userType;\n    const companyId = tokenData.companyId;\n    const isBulkInstallation = tokenData.isBulkInstallation;\n    \n    console.log('Token exchange successful:', {\n      userType,\n      locationId,\n      companyId,\n      isBulkInstallation\n    });\n    \n    // For bulk installations or agency installs, we might not get a locationId\n    // In this case, we need to handle it as an agency installation\n    if (!locationId && (userType === 'Company' || isBulkInstallation)) {\n      console.log('Agency/bulk installation detected - storing agency token for later location selection');\n      \n      // Store as agency token and redirect to location selection\n      const tenantId = `tenant_${Date.now()}`;\n      \n      await env.DB.prepare(`\n        INSERT OR REPLACE INTO tenants (id, created_at, name, install_context, agency_id)\n        VALUES (?, ?, ?, ?, ?)\n      `).bind(\n        tenantId,\n        Math.floor(Date.now() / 1000),\n        'Agency Installation',\n        'agency',\n        companyId\n      ).run();\n\n      // Encrypt and store agency token\n      const encryptedTokens = await encryptTokens({\n        accessToken: tokenData.access_token,\n        refreshToken: tokenData.refresh_token\n      }, env.ENCRYPTION_KEY);\n\n      const tokenId = `token_${Date.now()}`;\n      await env.DB.prepare(`\n        INSERT OR REPLACE INTO tokens (id, tenant_id, location_id, access_token, refresh_token, scope, expires_at, user_type, company_id)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `).bind(\n        tokenId,\n        tenantId,\n        null, // No specific location for agency tokens\n        encryptedTokens.accessToken,\n        encryptedTokens.refreshToken,\n        tokenData.scope,\n        Math.floor((Date.now() + (tokenData.expires_in * 1000)) / 1000),\n        userType,\n        companyId\n      ).run();\n\n      // Redirect to agency dashboard\n      return new Response(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Installation Complete</title>\n          <script>\n            window.location.href = '/?companyId=${companyId}&userType=agency';\n          </script>\n        </head>\n        <body>\n          <h1>\u2713 EasyCal Installed Successfully!</h1>\n          <p>Agency-level installation complete! Redirecting...</p>\n          <a href=\"/?companyId=${companyId}&userType=agency\">Go to EasyCal</a>\n        </body>\n        </html>\n      `, {\n        status: 200,\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n    \n    if (!locationId) {\n      console.error('No location ID found in token response');\n      return new Response(`\n        <!DOCTYPE html>\n        <html><body>\n          <h1>Installation Error</h1>\n          <p>Unable to determine location context. Please try installing from within a specific location.</p>\n        </body></html>\n      `, { status: 400, headers: { 'Content-Type': 'text/html' } });\n    }\n    \n    // Create tenant record\n    const tenantId = `tenant_${Date.now()}`;\n    const installContext = 'location'; // Always location for sub-account apps\n    \n    await env.DB.prepare(`\n      INSERT OR REPLACE INTO tenants (id, created_at, name, install_context, agency_id)\n      VALUES (?, ?, ?, ?, ?)\n    `).bind(\n      tenantId,\n      Math.floor(Date.now() / 1000),\n      'Location Installation',\n      installContext,\n      companyId\n    ).run();\n\n    // Create location record\n    await env.DB.prepare(`\n      INSERT OR REPLACE INTO locations (id, tenant_id, name, time_zone, is_enabled)\n      VALUES (?, ?, ?, ?, ?)\n    `).bind(\n      locationId,\n      tenantId,\n      'Location Installation',\n      'America/New_York',\n      1\n    ).run();\n\n    // Encrypt and store token\n    const encryptedTokens = await encryptTokens({\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token\n    }, env.ENCRYPTION_KEY);\n\n    const tokenId = `token_${Date.now()}`;\n    await env.DB.prepare(`\n      INSERT OR REPLACE INTO tokens (id, tenant_id, location_id, access_token, refresh_token, scope, expires_at, user_type, company_id)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      tokenId,\n      tenantId,\n      locationId,\n      encryptedTokens.accessToken,\n      encryptedTokens.refreshToken,\n      tokenData.scope,\n      Math.floor((Date.now() + (tokenData.expires_in * 1000)) / 1000),\n      userType,\n      companyId\n    ).run();\n\n    console.log('Installation completed:', {\n      locationId,\n      userType,\n      companyId,\n      installContext\n    });\n\n    // Success redirect - always redirect to location since we're getting location tokens\n    const redirectUrl = `/?locationId=${locationId}`;\n    const successMessage = 'Installation complete! You can now manage calendars for this location.';\n\n    return new Response(`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>Installation Complete</title>\n        <script>\n          window.location.href = '${redirectUrl}';\n        </script>\n      </head>\n      <body>\n        <h1>\u2713 EasyCal Installed Successfully!</h1>\n        <p>${successMessage}</p>\n        <p>Redirecting to your calendar manager...</p>\n        <a href=\"${redirectUrl}\">Go to EasyCal</a>\n      </body>\n      </html>\n    `, {\n      status: 200,\n      headers: { 'Content-Type': 'text/html' }\n    });\n    \n  } catch (error) {\n    console.error('OAuth callback error:', error);\n    return new Response(`\n      <!DOCTYPE html>\n      <html><body>\n        <h1>Installation Error</h1>\n        <p>Error: ${error.message}</p>\n      </body></html>\n    `, { status: 500, headers: { 'Content-Type': 'text/html' } });\n  }\n}\n\n// Simple token encryption\nasync function encryptTokens(tokens, encryptionKey) {\n  try {\n    const key = await crypto.subtle.importKey(\n      'raw',\n      new TextEncoder().encode(encryptionKey.substring(0, 32)),\n      { name: 'AES-GCM' },\n      false,\n      ['encrypt']\n    );\n\n    // Encrypt access token\n    const accessTokenIv = crypto.getRandomValues(new Uint8Array(12));\n    const encryptedAccessToken = await crypto.subtle.encrypt(\n      { name: 'AES-GCM', iv: accessTokenIv },\n      key,\n      new TextEncoder().encode(tokens.accessToken)\n    );\n\n    // Encrypt refresh token\n    const refreshTokenIv = crypto.getRandomValues(new Uint8Array(12));\n    const encryptedRefreshToken = await crypto.subtle.encrypt(\n      { name: 'AES-GCM', iv: refreshTokenIv },\n      key,\n      new TextEncoder().encode(tokens.refreshToken)\n    );\n\n    return {\n      accessToken: `${btoa(String.fromCharCode(...new Uint8Array(encryptedAccessToken)))}:${btoa(String.fromCharCode(...accessTokenIv))}`,\n      refreshToken: `${btoa(String.fromCharCode(...new Uint8Array(encryptedRefreshToken)))}:${btoa(String.fromCharCode(...refreshTokenIv))}`\n    };\n  } catch (error) {\n    console.error('Encryption error:', error);\n    throw new Error('Failed to encrypt tokens');\n  }\n}\n", "export async function onRequest(context) {\n  const { request, env } = context;\n  \n  try {\n    const url = new URL(request.url);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    const locationId = url.searchParams.get('locationId'); // GHL might pass this in callback\n    const companyId = url.searchParams.get('companyId'); // Or this for agency installs\n    \n    console.log('OAuth callback received:', {\n      code: code ? 'present' : 'missing',\n      state: state,\n      locationIdFromURL: locationId,\n      companyIdFromURL: companyId,\n      fullURL: request.url\n    });\n    \n    if (!code) {\n      return new Response(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Authorization Error</title>\n          <style>\n            body { font-family: sans-serif; text-align: center; padding: 50px; }\n            .error { color: #dc2626; background: #fef2f2; padding: 20px; border-radius: 8px; }\n          </style>\n        </head>\n        <body>\n          <div class=\"error\">\n            <h1>Authorization Error</h1>\n            <p>No authorization code received.</p>\n          </div>\n        </body>\n        </html>\n      `, {\n        status: 400,\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n    \n    // Exchange authorization code for access tokens\n    const tokenResponse = await exchangeCodeForTokens(code, env);\n    \n    if (!tokenResponse.success) {\n      return new Response(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Authorization Error</title>\n          <style>\n            body { font-family: sans-serif; text-align: center; padding: 50px; }\n            .error { color: #dc2626; background: #fef2f2; padding: 20px; border-radius: 8px; }\n          </style>\n        </head>\n        <body>\n          <div class=\"error\">\n            <h1>Authorization Error</h1>\n            <p>Failed to exchange authorization code: ${tokenResponse.error}</p>\n          </div>\n        </body>\n        </html>\n      `, {\n        status: 400,\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n    \n    // Store tokens and create tenant/location records\n    const installResult = await completeInstallation(tokenResponse.data, env);\n    \n    if (!installResult.success) {\n      return new Response(`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Installation Error</title>\n          <style>\n            body { font-family: sans-serif; text-align: center; padding: 50px; }\n            .error { color: #dc2626; background: #fef2f2; padding: 20px; border-radius: 8px; }\n          </style>\n        </head>\n        <body>\n          <div class=\"error\">\n            <h1>Installation Error</h1>\n            <p>Failed to complete installation: ${installResult.error}</p>\n          </div>\n        </body>\n        </html>\n      `, {\n        status: 500,\n        headers: { 'Content-Type': 'text/html' }\n      });\n    }\n    \n    // Success! Redirect to app\n    return new Response(`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>Installation Complete</title>\n        <style>\n          body { font-family: sans-serif; text-align: center; padding: 50px; }\n          .success { color: #059669; background: #f0fdf4; padding: 20px; border-radius: 8px; }\n          .btn { display: inline-block; background: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin-top: 20px; }\n        </style>\n        <script>\n          // Auto-redirect immediately to the app with location context\n          window.location.href = '/?locationId=${installResult.locationId}';\n        </script>\n      </head>\n      <body>\n        <div class=\"success\">\n          <h1>\u2713 EasyCal Installed Successfully!</h1>\n          <p>Your GoHighLevel account is now connected to EasyCal.</p>\n          <p><strong>Location:</strong> ${installResult.locationName}</p>\n          <p>Redirecting to your calendar manager...</p>\n          <a href=\"/?locationId=${installResult.locationId}\" class=\"btn\">Go to EasyCal</a>\n        </div>\n      </body>\n      </html>\n    `, {\n      status: 200,\n      headers: { 'Content-Type': 'text/html' }\n    });\n    \n  } catch (error) {\n    console.error('Callback error:', error);\n    \n    return new Response(`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>Callback Error</title>\n        <style>\n          body { font-family: sans-serif; text-align: center; padding: 50px; }\n          .error { color: #dc2626; background: #fef2f2; padding: 20px; border-radius: 8px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"error\">\n          <h1>Callback Error</h1>\n          <p>${error.message}</p>\n        </div>\n      </body>\n      </html>\n    `, {\n      status: 500,\n      headers: { 'Content-Type': 'text/html' }\n    });\n  }\n}\n\n// Exchange authorization code for access tokens\nasync function exchangeCodeForTokens(code, env) {\n  try {\n    const tokenRequest = {\n      client_id: env.HL_CLIENT_ID,\n      client_secret: env.HL_CLIENT_SECRET,\n      grant_type: 'authorization_code',\n      code: code,\n      redirect_uri: env.OAUTH_REDIRECT_URL\n    };\n\n    console.log('Exchanging code for tokens...');\n    \n    const response = await fetch('https://services.leadconnectorhq.com/oauth/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams(tokenRequest).toString()\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Token exchange failed:', response.status, errorText);\n      return { success: false, error: `Token exchange failed: ${response.status}` };\n    }\n\n    const tokenData = await response.json();\n    console.log('Token exchange successful');\n    console.log('Full token response:', JSON.stringify(tokenData, null, 2));\n    \n    return { success: true, data: tokenData };\n  } catch (error) {\n    console.error('Token exchange error:', error);\n    return { success: false, error: error.message };\n  }\n}\n\n// Complete the installation by storing tokens and creating records\nasync function completeInstallation(tokenData, env) {\n  try {\n    // For marketplace OAuth installations, we'll create a generic tenant\n    // The actual location ID will be determined when the user first accesses the app\n    // This approach works around the API endpoint limitations in Cloudflare Workers\n    \n    // Parse the scope to get any location information\n    const scopes = tokenData.scope ? tokenData.scope.split(' ') : [];\n    console.log('Token scopes:', scopes);\n    console.log('Token data keys:', Object.keys(tokenData));\n    \n    // For GHL marketplace apps, the location_id can come from multiple sources:\n    // 1. OAuth callback URL parameters (locationId, companyId)\n    // 2. Token response data\n    // 3. For agency installs, we need to handle multiple locations\n    \n    let extractedLocationId = \n      locationId ||  // From callback URL\n      companyId ||   // From callback URL (agency)\n      tokenData.location_id || \n      tokenData.locationId || \n      tokenData.companyId ||\n      tokenData.sub; // Sometimes location ID is in 'sub' field\n    \n    console.log('Location ID extraction results:', {\n      fromCallbackURL: locationId,\n      fromCompanyId: companyId,\n      fromTokenData: {\n        location_id: tokenData.location_id,\n        locationId: tokenData.locationId,\n        companyId: tokenData.companyId,\n        sub: tokenData.sub\n      },\n      finalExtracted: extractedLocationId\n    });\n    \n    // If still no location ID found, this is an issue - use a fallback\n    if (!extractedLocationId || extractedLocationId.startsWith('temp_')) {\n      console.error('No valid location ID found in OAuth flow! Using fallback.');\n      // Use the known subaccount location ID as fallback\n      extractedLocationId = 'HgTZdA5INm0uiGh9KvHC'; // User-confirmed location ID\n      console.log('Using fallback location ID:', extractedLocationId);\n    }\n    \n    // Ensure we have a valid location ID before proceeding\n    if (!extractedLocationId) {\n      throw new Error('Failed to determine location ID for installation');\n    }\n    \n    const locationName = tokenData.name || tokenData.companyName || tokenData.businessName || 'New Installation';\n    const isAgencyInstall = scopes.includes('oauth.readonly') && scopes.includes('oauth.write');\n    \n    console.log('Extracted location info:', {\n      locationId: extractedLocationId,\n      locationName,\n      isAgencyInstall,\n      tokenDataKeys: Object.keys(tokenData),\n      fullTokenData: tokenData\n    });\n    \n    // The location ID might be in a different field - let's check all possible fields\n    console.log('Checking all possible location ID fields:', {\n      'tokenData.location_id': tokenData.location_id,\n      'tokenData.locationId': tokenData.locationId,\n      'tokenData.companyId': tokenData.companyId,\n      'tokenData.company_id': tokenData.company_id,\n      'tokenData.sub': tokenData.sub,\n      'tokenData.aud': tokenData.aud,\n      'tokenData.scope': tokenData.scope\n    });\n\n    // Create tenant record\n    const tenantId = generateId();\n    const tenantData = {\n      id: tenantId,\n      name: locationName,\n      installContext: isAgencyInstall ? 'agency' : 'location',\n      agencyId: isAgencyInstall ? (tokenData.companyId || extractedLocationId) : null,\n      createdAt: Math.floor(Date.now() / 1000)\n    };\n\n    // Store tenant in D1\n    await env.DB.prepare(`\n      INSERT OR REPLACE INTO tenants (id, created_at, name, install_context, agency_id)\n      VALUES (?, ?, ?, ?, ?)\n    `).bind(\n      tenantData.id,\n      tenantData.createdAt,\n      tenantData.name,\n      tenantData.installContext,\n      tenantData.agencyId\n    ).run();\n\n    // Create location record\n    const locationData = {\n      id: extractedLocationId,\n      tenantId: tenantId,\n      name: locationName,\n      timeZone: tokenData.timezone || 'America/New_York',\n      isEnabled: true\n    };\n\n    await env.DB.prepare(`\n      INSERT OR REPLACE INTO locations (id, tenant_id, name, time_zone, is_enabled)\n      VALUES (?, ?, ?, ?, ?)\n    `).bind(\n      locationData.id,\n      locationData.tenantId,\n      locationData.name,\n      locationData.timeZone,\n      locationData.isEnabled ? 1 : 0\n    ).run();\n\n    // Encrypt and store tokens\n    const encryptedTokens = await encryptTokens({\n      accessToken: tokenData.access_token,\n      refreshToken: tokenData.refresh_token,\n      expiresAt: Date.now() + (tokenData.expires_in * 1000)\n    }, env.ENCRYPTION_KEY);\n\n    const tokenId = generateId();\n    await env.DB.prepare(`\n      INSERT OR REPLACE INTO tokens (id, tenant_id, location_id, access_token, refresh_token, scope, expires_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      tokenId,\n      tenantId,\n      extractedLocationId, // Use the properly extracted location ID\n      encryptedTokens.accessToken,\n      encryptedTokens.refreshToken,\n      tokenData.scope,\n      Math.floor((Date.now() + (tokenData.expires_in * 1000)) / 1000)\n    ).run();\n\n    console.log('Installation completed successfully');\n\n    return {\n      success: true,\n      locationId: extractedLocationId,\n      locationName: locationName,\n      tenantId: tenantId\n    };\n\n  } catch (error) {\n    console.error('Installation error:', error);\n    return { success: false, error: error.message };\n  }\n}\n\n// Generate unique ID\nfunction generateId() {\n  return Math.random().toString(36).substring(2) + Date.now().toString(36);\n}\n\n// Encrypt tokens using Web Crypto API\nasync function encryptTokens(tokens, encryptionKey) {\n  try {\n    // Import the encryption key\n    const key = await crypto.subtle.importKey(\n      'raw',\n      new TextEncoder().encode(encryptionKey.substring(0, 32)), // Ensure 32 bytes\n      { name: 'AES-GCM' },\n      false,\n      ['encrypt']\n    );\n\n    // Encrypt access token\n    const accessTokenIv = crypto.getRandomValues(new Uint8Array(12));\n    const accessTokenBuffer = new TextEncoder().encode(tokens.accessToken);\n    const encryptedAccessToken = await crypto.subtle.encrypt(\n      { name: 'AES-GCM', iv: accessTokenIv },\n      key,\n      accessTokenBuffer\n    );\n\n    // Encrypt refresh token\n    const refreshTokenIv = crypto.getRandomValues(new Uint8Array(12));\n    const refreshTokenBuffer = new TextEncoder().encode(tokens.refreshToken);\n    const encryptedRefreshToken = await crypto.subtle.encrypt(\n      { name: 'AES-GCM', iv: refreshTokenIv },\n      key,\n      refreshTokenBuffer\n    );\n\n    // Convert to base64 for storage\n    const accessTokenB64 = btoa(String.fromCharCode(...new Uint8Array(encryptedAccessToken)));\n    const accessTokenIvB64 = btoa(String.fromCharCode(...accessTokenIv));\n    const refreshTokenB64 = btoa(String.fromCharCode(...new Uint8Array(encryptedRefreshToken)));\n    const refreshTokenIvB64 = btoa(String.fromCharCode(...refreshTokenIv));\n\n    return {\n      accessToken: `${accessTokenB64}:${accessTokenIvB64}`,\n      refreshToken: `${refreshTokenB64}:${refreshTokenIvB64}`\n    };\n\n  } catch (error) {\n    console.error('Encryption error:', error);\n    throw new Error('Failed to encrypt tokens');\n  }\n}\n", "export async function onRequest(context) {\n  const { request } = context;\n  \n  try {\n    const url = new URL(request.url);\n    console.log('Auth install called with URL:', request.url);\n    console.log('Method:', request.method);\n    \n    // Get install type from query params\n    const installType = url.searchParams.get('type') || 'location';\n    \n    // Generate state for CSRF protection\n    const state = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n    \n    // Build scopes - Include all necessary scopes for calendar and location operations\n    const scopes = [\n      'calendars.readonly',\n      'calendars.write',\n      'calendars/groups.write',\n      'calendars/groups.readonly',\n      'calendars/events.readonly',\n      'calendars/events.write',\n      'locations.readonly',\n      'locations.write',\n      'locations/customFields.readonly',\n      'locations/customFields.write'\n    ];\n\n    if (installType === 'agency') {\n      scopes.push('oauth.readonly', 'oauth.write');\n    }\n\n    // Use the correct GoHighLevel authorization URL from official docs\n    // For marketplace apps, use the marketplace chooselocation URL\n    const baseUrl = 'https://marketplace.gohighlevel.com/oauth/chooselocation';\n    const params = new URLSearchParams({\n      response_type: 'code',\n      client_id: '68b96169e165955a7edc20b3-mf58ywbo',\n      redirect_uri: 'https://easycal.enrollio.ai/auth/callback',\n      scope: scopes.join(' '),\n      state: state,\n    });\n    \n    // Add user_type parameter for agency installs\n    if (installType === 'agency') {\n      params.set('user_type', 'Company');\n    }\n\n    const authUrl = `${baseUrl}?${params.toString()}`;\n    console.log('Generated auth URL:', authUrl);\n    \n    // Return redirect response\n    return Response.redirect(authUrl, 302);\n    \n  } catch (error) {\n    console.error('Auth install error:', error);\n    \n    return new Response(JSON.stringify({\n      error: error.message,\n      status: 'error'\n    }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n}", "import { onRequest as __api_settings_defaults_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/settings/defaults.js\"\nimport { onRequest as __api_brand_config_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/brand-config.js\"\nimport { onRequest as __api_calendars_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/calendars.js\"\nimport { onRequest as __api_debug_token_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/debug-token.js\"\nimport { onRequest as __api_detect_location_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/detect-location.js\"\nimport { onRequest as __api_import_calendars_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/import-calendars.js\"\nimport { onRequest as __api_location_timezone_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/location-timezone.js\"\nimport { onRequest as __api_locations_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/locations.js\"\nimport { onRequest as __api_test_auth_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/api/test-auth.js\"\nimport { onRequest as __auth_callback_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/auth/callback.js\"\nimport { onRequest as __auth_callback_old_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/auth/callback-old.js\"\nimport { onRequest as __auth_install_js_onRequest } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/functions/auth/install.js\"\n\nexport const routes = [\n    {\n      routePath: \"/api/settings/defaults\",\n      mountPath: \"/api/settings\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_settings_defaults_js_onRequest],\n    },\n  {\n      routePath: \"/api/brand-config\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_brand_config_js_onRequest],\n    },\n  {\n      routePath: \"/api/calendars\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_calendars_js_onRequest],\n    },\n  {\n      routePath: \"/api/debug-token\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_debug_token_js_onRequest],\n    },\n  {\n      routePath: \"/api/detect-location\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_detect_location_js_onRequest],\n    },\n  {\n      routePath: \"/api/import-calendars\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_import_calendars_js_onRequest],\n    },\n  {\n      routePath: \"/api/location-timezone\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_location_timezone_js_onRequest],\n    },\n  {\n      routePath: \"/api/locations\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_locations_js_onRequest],\n    },\n  {\n      routePath: \"/api/test-auth\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_test_auth_js_onRequest],\n    },\n  {\n      routePath: \"/auth/callback\",\n      mountPath: \"/auth\",\n      method: \"\",\n      middlewares: [],\n      modules: [__auth_callback_js_onRequest],\n    },\n  {\n      routePath: \"/auth/callback-old\",\n      mountPath: \"/auth\",\n      method: \"\",\n      middlewares: [],\n      modules: [__auth_callback_old_js_onRequest],\n    },\n  {\n      routePath: \"/auth/install\",\n      mountPath: \"/auth\",\n      method: \"\",\n      middlewares: [],\n      modules: [__auth_install_js_onRequest],\n    },\n  ]", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/opt/homebrew/lib/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/opt/homebrew/lib/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/bundle-PzE3H5/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/bundle-PzE3H5/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/bundle-PzE3H5/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/pages-WpINI4/functionsWorker-0.7308652740841801.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/pages-WpINI4/functionsWorker-0.7308652740841801.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/bundle-HWT8so/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/opt/homebrew/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/bundle-HWT8so/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/elnueve/Documents/Enrollio/EasyCal/easycal/.wrangler/tmp/bundle-HWT8so/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["urls", "checkURL", "__name", "locationId", "onRequest", "companyId", "decryptToken", "getLocationToken", "match", "tenantId", "encryptedTokens", "tokenId", "generateId", "encryptTokens", "value", "_a", "result", "char", "prefix", "i", "drainBody", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
